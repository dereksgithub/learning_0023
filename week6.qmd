# Week 6 Introduction to Google Earth Engine {.unnumbered}

This is a very exciting week that I could not physically attend since I was at the CUSP Data Dive (Datathon), GEE is something that interested me before selecting this module.

## JavaScript and GEE Basics

Google Earth Engine is a cloud platform developed by Google for scientific data analysis. [@reis2020primer] GEE can handle large datasets in a relatively faster than many other traditional commercial software, its mature integration with JavaScript also enables new users to master the tool suite with a shallower learning curve.[@cardille2022cloud] JavaScript is the language used in GEE code editor, it is an essential tool for front-end development, enabling developers to implement complex and interactive websites. JavaScript also interacts with HTML and CSS to style and build the user interface.

Here is a basic block to code a function:

``` js
function sayHi(name) {
    alert("Hi," + name + "!");
}

sayHi(" guys, "); // Pops up "Hi, guys, !"
```

## GEE Case Study Bristol

First, I gathered air quality data over Bristol. But the resolution from Sentinel 5P was not ideal, thus I zoomed out in order to find places with high NO2 levels, in the end, even London is included. At this resolution, it is obvious that we will need more image processing and better resolution to have fine-grained data on urban air quality

![NO2 Level Over Bristol to London from Sentinel 5P](images/wk6/wk06_NO2.png)

### Air Quality, SAVI, ARVI, NDVI and NDWI

In this introductory study of GEE, I have examined the NO2 from Sentinel 5P and calculated NDVI, NDWI, SAVI and ARVI for Bristol. Time from the data used are Sentinel 2 and Sentinel 5P (for NO2) from 2021-Jan-01 to 2023-Dec-30, I made a date slider for the user to drag to select which data from a 30-day window. Rarely, the selection won't be valid, that is because the filter that I coded for the cloud is very low 5, and the Sentinel 2 images tend to be more cloudy for Bristol, please refresh the webpage and try another month. Most of the time it is working, due to the confined time-frame, I will be optimising this app and its UI in the future. For now, NO2 is not bounded, as the Sentinel 5P data is low-resolution compared to Sentinel 2, thus NDVI, NDWI, SAVI and ARVI are bounded within the Bristol image, where as NO2 layer is not.

### Putting Everything Together

Here is the [link to the lookup app](https://ee-mengyu-derek-ding.projects.earthengine.app/view/brsitol-ndvindwiarvisavi-lookup) for Bristol, it is also embedded as follows:

<p align="left">

<iframe title="vimeo-player" width="680" height="600" src="https://ee-mengyu-derek-ding.projects.earthengine.app/view/brsitol-ndvindwiarvisavi-lookup" title="GEE App Bristol Look-up" frameborder="0">

</iframe>

</p>

For the legend in the GEE app, have modified and derived the code from: [Open Geo Blog](https://mygeoblog.com/2016/12/09/add-a-legend-to-to-your-gee-map/). The colour code gradients for the four metrics are gathered from this [website](https://www.color-hex.com/).

<https://developers.google.com/earth-engine/datasets/catalog/LANDSAT_LC09_C02_T1_L2#description>

For the rest of the practical, I downloaded the [Bristol City Boundary](https://opendata.bristol.gov.uk/datasets/bcc::bristol-boundary/explore) shape file, uploaded to the assets and clipped out images with only Bristol. Currently clipping code only works with my code editor, not the published app.

<div class="image-container" style="display: grid; grid-template-columns: repeat(2,1fr); grid-template-rows: repeat(2,1fr); gap:5px;">

<img src="images/wk6/wk6_ndvi.png" height = 310 width= 340px alt="NDVI for Bristol">

<img src="images/wk6/wk6_ndwi.png" height = 310 width= 340px alt="NDWI for Bristol">

<img src="images/wk6/wk6_savi.png" height = 310 width= 340px alt="SAVI for Bristol">

<img src="images/wk6/wk6_arvi.png" height = 310 width= 340px alt="ARVI for Bristol"></div><p align="center" class="grid-caption">NDVI, NDWI, SAVI and ARVI bounded by the Bristol Boundary</p>

## PCA

PCA runs faster compared to R, but the JS code is more complex.

With the

I have put everything in an GEE app:

<div class="image-container" style="display: grid; grid-template-columns: repeat(2,1fr); grid-template-rows: repeat(3,1fr); gap:5px;">

<div class="image-item"><img src="images/wk6/bristolbound.png" height = 310 width= 340px alt="NDVI for Bristol"><p align="center" class="caption">Bristol Boundary</p></div>

<div class="image-item"><img src="images/wk6/bristolclip.png" height = 310 width= 340px alt="SAVI for Bristol"><p align="center" class="caption">Bristol Clip</p></div>

<div class="image-item"><img src="images/wk6/glcm.png" height = 310 width= 340px alt="NDWI for Bristol"><p align="center" class="caption">GLCM</p></div>

<div class="image-item"><img src="images/wk6/PC1_and_PC2.png" height = 310 width= 340px alt="ARVI for Bristol"><p align="center" class="caption">P1 and P2</p></div>

<div class="image-item"><img src="images/wk6/PC1.png" height = 230 width= 340px alt="ARVI for Bristol"><p align="center" class="caption">PC1</p></div>

<div class="image-item"><img src="images/wk6/PC2.png" height = 230 width= 340px alt="ARVI for Bristol"><p align="center" class="caption">PC2</p></div>

</div>

## Reflection

Employing Google Earth Engine (GEE) certainly rekindles memories of my extensive collaborative efforts on diverse projects in Melbourne. During those projects, I relied on NearMaps to coordinate with the design team and worked closely alongside engineers and GIS specialists. Together, we organised design modifications and participated the digital transformation of the construction processes. Unlike those days when my role was more supervisory and collaborative, I now find myself directly engaged with GEE, utilizing its powerful remote sensing capabilities for urban analysis and environmental applications.

The current literature of using GEE is as indicated by Ollie's graph.

GEE enables the

and many new applications and publications [@amani2020google]
